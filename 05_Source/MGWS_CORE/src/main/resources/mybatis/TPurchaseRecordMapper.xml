<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="tPurchaseRecordMapper" >
  <resultMap id="BaseResultMap" type="com.org.mgws.entity.TPurchaseRecord" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="customerNo" property="customerNo" jdbcType="VARCHAR" />
    <result column="productId" property="productId" jdbcType="BIGINT" />
    <result column="dateFrom" property="dateFrom" jdbcType="VARCHAR" />
    <result column="dateTo" property="dateTo" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="PurchaseInfo" type="com.org.mgws.dto.PurchaseInfo" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="customerNo" property="customerNo" jdbcType="VARCHAR" />
    <result column="productId" property="productId" jdbcType="BIGINT" />
    <result column="dateFrom" property="dateFrom" jdbcType="VARCHAR" />
    <result column="dateTo" property="dateTo" jdbcType="VARCHAR" />
    <result column="productName" property="productName" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="BaseResultMap2" type="com.org.mgws.entity.TPurchaseRecord" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="customerNo" property="customerNo" jdbcType="VARCHAR" />
    <result column="customerName" property="customerName" jdbcType="VARCHAR" />
    <result column="productId" property="productId" jdbcType="BIGINT" />
    <result column="productName" property="productName" jdbcType="BIGINT" />
    <result column="dateFrom" property="dateFrom" jdbcType="VARCHAR" />
    <result column="dateTo" property="dateTo" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, customerNo, productId, dateFrom, dateTo
  </sql>
  <sql id="Base_Column_List2" >
    t1.id, t1.customerNo, t1.productId, DATE_FORMAT(t1.dateFrom,'%Y/%m/%d') as dateFrom, DATE_FORMAT(t1.dateTo,'%Y/%m/%d') as dateTo,t2.productName
  </sql>

  <select id="selectAllByParam" resultMap="PurchaseInfo" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List2" />
    from t_purchase_record t1 left join t_investment_master t2 on t1.productId = t2.id
    where 1=1
    <if test="customerNo != null and customerNo != ''" >
        and t1.customerNo like CONCAT('%',#{customerNo,jdbcType=VARCHAR},'%')
    </if>
  </select>
  <select id="selectAllByParamCount" resultType="int" parameterType="java.lang.String" >
    select 
    count(1)
    from t_investment_master
    where 1=1
    <if test="productName != null and productName != ''" >
        and productName like CONCAT('%',#{productName,jdbcType=VARCHAR},'%')
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_purchase_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByCustomerNo" resultMap="PurchaseInfo" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List2" />
    from t_purchase_record t1 left join t_investment_master t2 on t1.productId = t2.id 
    <if test="customerNo != null and customerNo != ''" >
    where customerNo = #{customerNo,jdbcType=VARCHAR}
    </if>
  </select>
  <select id="checkByCustomerNo" resultMap="PurchaseInfo" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_purchase_record
    where customerNo = #{customerNo,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_purchase_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.org.mgws.entity.TPurchaseRecord" >
    insert into t_purchase_record (id, customerNo, productId, 
      dateFrom, dateTo)
    values (#{id,jdbcType=BIGINT}, #{customerNo,jdbcType=VARCHAR}, #{productId,jdbcType=BIGINT}, 
      #{dateFrom,jdbcType=VARCHAR}, #{dateTo,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.org.mgws.entity.TPurchaseRecord" >
    insert into t_purchase_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="customerNo != null" >
        customerNo,
      </if>
      <if test="productId != null" >
        productId,
      </if>
      <if test="dateFrom != null" >
        dateFrom,
      </if>
      <if test="dateTo != null" >
        dateTo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="customerNo != null" >
        #{customerNo,jdbcType=VARCHAR},
      </if>
      <if test="productId != null" >
        #{productId,jdbcType=BIGINT},
      </if>
      <if test="dateFrom != null" >
        #{dateFrom,jdbcType=VARCHAR},
      </if>
      <if test="dateTo != null" >
        #{dateTo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.org.mgws.entity.TPurchaseRecord" >
    update t_purchase_record
    <set >
      <if test="customerNo != null" >
        customerNo = #{customerNo,jdbcType=VARCHAR},
      </if>
      <if test="productId != null" >
        productId = #{productId,jdbcType=BIGINT},
      </if>
      <if test="dateFrom != null" >
        dateFrom = #{dateFrom,jdbcType=VARCHAR},
      </if>
      <if test="dateTo != null" >
        dateTo = #{dateTo,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.org.mgws.entity.TPurchaseRecord" >
    update t_purchase_record
    set customerNo = #{customerNo,jdbcType=VARCHAR},
      productId = #{productId,jdbcType=BIGINT},
      dateFrom = #{dateFrom,jdbcType=VARCHAR},
      dateTo = #{dateTo,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>